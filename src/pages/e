const downloadPDF = async () => {
  isLoading.value = true; // Démarrer le chargement

  const doc = new jsPDF();


  // Fonction pour formater la date
  const formatDate = (date) => {
    const day = String(date.getDate()).padStart(2, '0');
    const month = String(date.getMonth() + 1).padStart(2, '0'); // Les mois commencent à 0
    const year = date.getFullYear();
    return `${day}-${month}-${year}`;
  };

  // Date d'aujourd'hui
  const today = formatDate(new Date());
  doc.setFontSize(6);
  doc.text(`Date: ${today}`, 14, 30);

  // Numéro de référence
  const referenceNumber = "53843978"; // Remplacez par la logique pour générer un numéro si nécessaire
  doc.text(`Numéro: ${referenceNumber}`, 14, 36);

  // Sous-titre avec la période
  const startDateStr = props.startDate ? formatDate(props.startDate) : 'Non spécifié';
  const endDateStr = props.endDate ? formatDate(props.endDate) : 'Non spécifié';
  doc.text(`Période: ${startDateStr} - ${endDateStr}`, 14, 42);

  // En-tête du tableau
  doc.setFontSize(12);
  doc.text('Relevé des consommations Internet', 14, 50);
  
  // Préparer les données du tableau
  const tableRows = [];
  for (const item of filteredData.value) {
    try {
      const base64Image = await convertImageToBase64(item.image);
      tableRows.push([
        { content: item.service, image: base64Image }, // Ajouter l'image et le texte
        `${item.consumption.toFixed(2)} MB`,
      ]);
    } catch (error) {
      console.error("Erreur de conversion de l'image:", error);
    }
  }

  // Ajouter la table
  doc.autoTable({
    head: [["Applications / Site Web", "Consommation (MB)"]],
    body: tableRows,
    startY: 60, // Ajustez la position de départ pour la table
    theme: 'striped',
    styles: { fontSize: 9, cellPadding: 3, halign: 'justify' },
    headStyles: { fillColor: [52, 58, 64], textColor: 255 },
    columnStyles: {
      0: {
        cellWidth: 80,
        renderer: (doc, data) => {
          const rowData = data.cell.raw;
          if (rowData.image) {
            // Ajouter l'image et le texte
            doc.addImage(rowData.image, 'PNG', data.cell.x + 2, data.cell.y + 2, 10, 10);
            doc.text(rowData.content, data.cell.x + 14, data.cell.y + 8);
          } else {
            doc.text(rowData.content || "", data.cell.x + 2, data.cell.y + 8);
          }
        },
      },
      1: {
        halign: 'right', // Alignement à droite pour la consommation
      },
    },
  });

  // Ajouter le total en bas
  doc.setFontSize(10);
  doc.text(`Total des consommations: ${totalConsumption.value} MB`, 14, doc.autoTable.previous.finalY + 10);

  // Sauvegarder le PDF
  doc.save("consommation_internet.pdf");
  isLoading.value = false; // Arrêter le chargement
};
